From 1c3dd8ddcba63c1af5112e567215b3cec2de11d0 Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Sat, 17 Sep 2022 19:43:23 +0100
Subject: [PATCH] patch 9.0.0490: using freed memory with cmdwin and BufEnter
 autocmd

Problem:    Using freed memory with cmdwin and BufEnter autocmd.
Solution:   Make sure pointer to b_p_iminsert is still valid.
---
 src/ex_getln.c              |  8 ++++++--
 src/testdir/test_cmdwin.vim | 10 ++++++++++
 src/version.c               |  2 ++
 3 files changed, 18 insertions(+), 2 deletions(-)

Backport: rewrote b_im_ptr handling

diff --git a/src/ex_getln.c b/src/ex_getln.c
index 70436b31f05e..a4fb61145c96 100644
--- a/src/ex_getln.c
+++ b/src/ex_getln.c
@@ -212,6 +212,7 @@ getcmdline(
 #endif
     expand_T	xpc;
     long	*b_im_ptr = NULL;
+    buf_T	*b_im_ptr_buf = NULL;	// buffer where b_im_ptr is valid
 #if defined(FEAT_WILDMENU) || defined(FEAT_EVAL) || defined(FEAT_SEARCH_EXTRA)
     /* Everything that may work recursively should save and restore the
      * current command line in save_ccline.  That includes update_screen(), a
@@ -323,6 +324,7 @@ getcmdline(
 	    b_im_ptr = &curbuf->b_p_iminsert;
 	else
 	    b_im_ptr = &curbuf->b_p_imsearch;
+	b_im_ptr_buf = curbuf;
 	if (*b_im_ptr == B_IMODE_LMAP)
 	    State |= LANGMAP;
 #ifdef USE_IM_CONTROL
@@ -1086,7 +1088,7 @@ getcmdline(
 #ifdef USE_IM_CONTROL
 		    im_set_active(FALSE);	/* Disable input method */
 #endif
-		    if (b_im_ptr != NULL)
+		    if (b_im_ptr != NULL && buf_valid(b_im_ptr_buf))
 		    {
 			if (State & LANGMAP)
 			    *b_im_ptr = B_IMODE_LMAP;
@@ -1100,7 +1102,7 @@ getcmdline(
 		    /* There are no ":lmap" mappings, toggle IM.  When
 		     * 'imdisable' is set don't try getting the status, it's
 		     * always off. */
-		    if ((p_imdisable && b_im_ptr != NULL)
+ 		    if ((p_imdisable && b_im_ptr != NULL && buf_valid(b_im_ptr_buf))
 			    ? *b_im_ptr == B_IMODE_IM : im_get_status())
 		    {
 			im_set_active(FALSE);	/* Disable input method */
@@ -1110,12 +1112,12 @@ getcmdline(
 		    else
 		    {
 			im_set_active(TRUE);	/* Enable input method */
-			if (b_im_ptr != NULL)
+			if (b_im_ptr != NULL && buf_valid(b_im_ptr_buf))
 			    *b_im_ptr = B_IMODE_IM;
 		    }
 		}
 #endif
-		if (b_im_ptr != NULL)
+		if (b_im_ptr != NULL && buf_valid(b_im_ptr_buf))
 		{
 		    if (b_im_ptr == &curbuf->b_p_iminsert)
 			set_iminsert_global();
@@ -2074,7 +2076,8 @@ getcmdline(
 
     State = save_State;
 #ifdef USE_IM_CONTROL
-    if (b_im_ptr != NULL && *b_im_ptr != B_IMODE_LMAP)
+    if (b_im_ptr != NULL && buf_valid(b_im_ptr_buf)
+						  && *b_im_ptr != B_IMODE_LMAP)
 	im_save_status(b_im_ptr);
     im_set_active(FALSE);
 #endif
diff --git a/src/testdir/test_cmdwin.vim b/src/testdir/test_cmdwin.vim
index d62673aba254..fe849bcc1686 100644
--- /dev/null
+++ b/src/testdir/test_cmdwin.in
@@ -0,0 +0,15 @@
+This was using a pointer to a freed buffer
+
+STARTTEST
+:so small.vim
+:au BufEnter * next 0| file 
+:edit 0
+:silent! norm q/
+:au! BufEnter
+:bwipe!
+:norm oresult
+:%w! test.out
+:qa!
+ENDTEST
+
+discarded
--- /dev/null
+++ b/src/testdir/test_cmdwin.ok
@@ -0,0 +0,2 @@
+
+result
--- a/src/testdir/Makefile
+++ b/src/testdir/Makefile
@@ -37,6 +37,7 @@
 		test_breakindent.out \
 		test_changelist.out \
 		test_cmdline.out \
+		test_cmdwin.out \
 		test_eval.out \
 		test_insertcount.out \
 		test_listlbr.out \
--- a/src/version.c
+++ b/src/version.c
@@ -1198,6 +1198,8 @@
 static char *(extra_patches[]) =
 {   /* Add your patch description below this line */
 /**/
+    "9.0.0490",
+/**/
     "8.2.5126",
 /**/
     "8.2.5063",
