From 71223e2db87c2bf3b09aecb46266b56cda26191d Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Mon, 30 May 2022 15:23:09 +0100
Subject: [PATCH] patch 8.2.5043: can open a cmdline window from a substitute
 expression

Problem:    Can open a cmdline window from a substitute expression.
Solution:   Disallow opening a command line window when text or buffer is
            locked.
---
 src/buffer.c                    |  7 +------
 src/ex_getln.c                  | 19 +++++++++++++++++++
 src/proto/ex_getln.pro          |  5 +++--
 src/testdir/test_substitute.vim | 25 +++++++++++++++++++++++++
 src/version.c                   |  2 ++
 src/window.c                    |  5 +----
 6 files changed, 51 insertions(+), 12 deletions(-)

Backport: Drop test case, because the expected E565 was only introduced in
 8.2.0670 and the testcase does not otherwise fail or issue messages in
 valgrind. Also deal with FEAT_AUTOCMD disabling curbuf_locked().

diff --git a/src/buffer.c b/src/buffer.c
index efec431c822d..e775398d0294 100644
--- a/src/buffer.c
+++ b/src/buffer.c
@@ -2293,15 +2293,8 @@ buflist_getfile(
     if (buf == curbuf)
 	return OK;
 
-    if (text_locked())
-    {
-	text_locked_msg();
-	return FAIL;
-    }
-#ifdef FEAT_AUTOCMD
-    if (curbuf_locked())
+    if (text_or_buf_locked())
 	return FAIL;
-#endif
 
     /* altfpos may be changed by getfile(), get it now */
     if (lnum == 0)
diff --git a/src/ex_getln.c b/src/ex_getln.c
index 9dadfbf2fabe..623bd1d4984a 100644
--- a/src/ex_getln.c
+++ b/src/ex_getln.c
@@ -2054,6 +2054,25 @@
 	EMSG(_(e_secure));
 }
 
+/*
+ * Check for text, window or buffer locked.
+ * Give an error message and return TRUE if something is locked.
+ */
+    int
+text_or_buf_locked(void)
+{
+    if (text_locked())
+    {
+	text_locked_msg();
+	return TRUE;
+    }
+#if defined(FEAT_AUTOCMD)
+    return curbuf_locked();
+#else
+    return FALSE;
+#endif
+}
+
 #if defined(FEAT_AUTOCMD) || defined(PROTO)
 /*
  * Check if "curbuf_lock" or "allbuf_lock" is set and return TRUE when it is
@@ -7188,6 +7203,10 @@ open_cmdwin(void)
     int			save_KeyTyped;
 #endif
 
+    /* Can't do this when text or buffer is locked. */
+    if (text_or_buf_locked())
+	return K_IGNORE;
+
     /* Can't do this recursively.  Can't do it when typing a password. */
     if (cmdwin_type != 0
 # if defined(FEAT_CRYPT) || defined(FEAT_EVAL)
diff --git a/src/proto/ex_getln.pro b/src/proto/ex_getln.pro
index 8c8bd0ebd4cd..bcc310c7dd0e 100644
--- a/src/proto/ex_getln.pro
+++ b/src/proto/ex_getln.pro
@@ -3,6 +3,7 @@
 char_u *getcmdline_prompt __ARGS((int firstc, char_u *prompt, int attr, int xp_context, char_u *xp_arg));
 int text_locked __ARGS((void));
 void text_locked_msg __ARGS((void));
+int text_or_buf_locked __ARGS((void));
 int curbuf_locked __ARGS((void));
 int allbuf_locked __ARGS((void));
 char_u *getexline __ARGS((int c, void *cookie, int indent));
diff --git a/src/version.c b/src/version.c
index 18a1fdb41cb6..a15bb3ed8d6a 100644
--- a/src/version.c
+++ b/src/version.c
@@ -1198,6 +1198,8 @@ static char *(features[]) =
 static char *(extra_patches[]) =
 {   /* Add your patch description below this line */
 /**/
+    "8.2.5043",
+/**/
     "8.2.5023",
 /**/
     "8.2.4977",
diff --git a/src/window.c b/src/window.c
index f2913d4a76ef..9b5ac97286cd 100644
--- a/src/window.c
+++ b/src/window.c
@@ -4089,15 +4089,12 @@ win_goto(win_T *wp)
     win_T	*owp = curwin;
 #endif

-    if (text_locked())
+    if (text_or_buf_locked())
     {
 	beep_flush();
-	text_locked_msg();
 	return;
     }
 #ifdef FEAT_AUTOCMD
-    if (curbuf_locked())
-	return;
 #endif
 
     if (wp->w_buffer != curbuf)
