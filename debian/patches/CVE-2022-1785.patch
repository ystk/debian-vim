From e2bd8600b873d2cd1f9d667c28cba8b1dba18839 Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Wed, 18 May 2022 13:11:57 +0100
Subject: [PATCH] patch 8.2.4977: memory access error when substitute
 expression changes window

Problem:    Memory access error when substitute expression changes window.
Solution:   Disallow changing window in substitute expression.
---
 src/ex_cmds.c                   | 11 +++++++++++
 src/testdir/test_substitute.vim | 13 +++++++++++++
 src/version.c                   |  2 ++
 3 files changed, 26 insertions(+)

Backport: Use textlock instead of textwinlock. In this version, textwinlock
 wasn't yet split out from textlock and it'll get merged back later.
 Drop test case as it does not trigger on jessie.

--- a/src/ex_cmds.c
+++ b/src/ex_cmds.c
@@ -5021,12 +5021,17 @@ do_sub(eap)
 		    curbuf->b_p_ma = FALSE;
 		    sandbox++;
 		}
+
+		/* Disallow changing text or switching window in an expression. */
+		++textlock;
 #endif
 		/* get length of substitution part */
 		sublen = vim_regsub_multi(&regmatch,
 				    sub_firstlnum - regmatch.startpos[0].lnum,
 				    sub, sub_firstline, FALSE, p_magic, TRUE);
 #ifdef FEAT_EVAL
+		--textlock;
+
 		if (do_count)
 		{
 		    curbuf->b_p_ma = save_ma;
@@ -5102,9 +5107,15 @@ do_sub(eap)
 		mch_memmove(new_end, sub_firstline + copycol, (size_t)copy_len);
 		new_end += copy_len;
 
+#ifdef FEAT_EVAL
+		++textlock;
+#endif
 		(void)vim_regsub_multi(&regmatch,
 				    sub_firstlnum - regmatch.startpos[0].lnum,
 					   sub, new_end, TRUE, p_magic, TRUE);
+#ifdef FEAT_EVAL
+		--textlock;
+#endif
 		sub_nsubs++;
 		did_sub = TRUE;
 
--- a/src/version.c
+++ b/src/version.c
@@ -1733,6 +1733,8 @@ static int included_patches[] =
 static char *(extra_patches[]) =
 {   /* Add your patch description below this line */
 /**/
+    "8.2.4977",
+/**/
     "8.1.1365",
 /**/
     "8.0.1263",
