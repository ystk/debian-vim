Subject: Use BASEMODLIBS instead of MODLIBS from Python's config.
Origin: commit:99ba9a30755a
Bug-Debian: http://bugs.debian.org/566842

Index: b/src/config.mk.in
===================================================================
--- a/src/config.mk.in
+++ b/src/config.mk.in
@@ -56,6 +56,7 @@
 PYTHON_SRC	= @PYTHON_SRC@
 PYTHON_OBJ	= @PYTHON_OBJ@
 PYTHON_CFLAGS	= @PYTHON_CFLAGS@
+PYTHON_NOPROTO	= @PYTHON_NOPROTO@
 PYTHON_LIBS	= @PYTHON_LIBS@
 PYTHON_CONFDIR	= @PYTHON_CONFDIR@
 PYTHON_GETPATH_CFLAGS = @PYTHON_GETPATH_CFLAGS@
Index: b/src/configure.in
===================================================================
--- a/src/configure.in
+++ b/src/configure.in
@@ -725,7 +725,7 @@
 	    tmp_mkf="$pwd/config-PyMake$$"
 	    cat -- "${PYTHON_CONFDIR}/Makefile" - <<'eof' >"${tmp_mkf}"
 __:
-	@echo "python_MODLIBS='$(MODLIBS)'"
+	@echo "python_BASEMODLIBS='$(BASEMODLIBS)'"
 	@echo "python_LIBS='$(LIBS)'"
 	@echo "python_SYSLIBS='$(SYSLIBS)'"
 	@echo "python_LINKFORSHARED='$(LINKFORSHARED)'"
@@ -742,7 +742,7 @@
 	      else
 		  vi_cv_path_python_plibs="-L${PYTHON_CONFDIR} -lpython${vi_cv_var_python_version}"
 	      fi
-	      vi_cv_path_python_plibs="${vi_cv_path_python_plibs} ${python_MODLIBS} ${python_LIBS} ${python_SYSLIBS} ${python_LINKFORSHARED}"
+	      vi_cv_path_python_plibs="${vi_cv_path_python_plibs} ${python_BASEMODLIBS} ${python_LIBS} ${python_SYSLIBS} ${python_LINKFORSHARED}"
 	      dnl remove -ltermcap, it can conflict with an earlier -lncurses
 	      vi_cv_path_python_plibs=`echo $vi_cv_path_python_plibs | sed s/-ltermcap//`
 	    fi
@@ -754,6 +754,7 @@
 	else
 	  PYTHON_CFLAGS="-I${vi_cv_path_python_pfx}/include/python${vi_cv_var_python_version} -I${vi_cv_path_python_epfx}/include/python${vi_cv_var_python_version}"
 	fi
+	PYTHON_NOPROTO=
 	PYTHON_SRC="if_python.c"
 	dnl For Mac OSX 10.2 config.o is included in the Python library.
 	if test "x$MACOSX" = "xyes"; then
@@ -773,6 +774,8 @@
 	dnl Otherwise, when using GCC, try adding -pthread to $CFLAGS.  GCC
 	dnl will then define target-specific defines, e.g., -D_REENTRANT.
 	dnl Don't do this for Mac OSX, -pthread will generate a warning.
+	dnl Need to put -pthread in PYTHON_NOPROTO, because it cannot be used
+	dnl for cproto.
 	AC_MSG_CHECKING([if -pthread should be used])
 	threadsafe_flag=
 	thread_lib=
@@ -790,7 +793,7 @@
 	  CFLAGS="$CFLAGS $threadsafe_flag"
 	  LIBS="$LIBS $thread_lib"
 	  AC_TRY_LINK(,[ ],
-	     AC_MSG_RESULT(yes); PYTHON_CFLAGS="$PYTHON_CFLAGS $threadsafe_flag",
+	     AC_MSG_RESULT(yes); PYTHON_NOPROTO="$threadsafe_flag",
 	     AC_MSG_RESULT(no); LIBS=$libs_save_old
 	     )
 	  CFLAGS=$cflags_save
@@ -803,7 +806,7 @@
 	AC_MSG_CHECKING([if compile and link flags for Python are sane])
 	cflags_save=$CFLAGS
 	libs_save=$LIBS
-	CFLAGS="$CFLAGS $PYTHON_CFLAGS"
+	CFLAGS="$CFLAGS $PYTHON_CFLAGS $PYTHON_NOPROTO"
 	LIBS="$LIBS $PYTHON_LIBS"
 	AC_TRY_LINK(,[ ],
 	       AC_MSG_RESULT(yes); python_ok=yes,
@@ -818,6 +821,7 @@
 	  PYTHON_OBJ=
 	  PYTHON_LIBS=
 	  PYTHON_CFLAGS=
+	  PYTHON_NOPROTO=
 	fi
 
       fi
@@ -830,6 +834,7 @@
 AC_SUBST(PYTHON_LIBS)
 AC_SUBST(PYTHON_GETPATH_CFLAGS)
 AC_SUBST(PYTHON_CFLAGS)
+AC_SUBST(PYTHON_NOPROTO)
 AC_SUBST(PYTHON_SRC)
 AC_SUBST(PYTHON_OBJ)
 
